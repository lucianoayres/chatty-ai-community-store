name: Agent YAML Validator

on:
  push:
    paths:
      - "agents/**/*.yaml"
      - "agents/**/*.yml"
  pull_request:
    paths:
      - "agents/**/*.yaml"
      - "agents/**/*.yml"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml yamale

      - name: Find changed YAML files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: |
            agents/**/*.yaml
            agents/**/*.yml

      - name: Validate changed YAML files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Validating changed YAML files:"
          echo "${{ steps.changed-files.outputs.all_changed_files }}"

          # Create a directory for the validation results
          mkdir -p validation_results

          # Initialize error flag
          ERROR_FOUND=0

          # Validate each changed file
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "Validating $file..."
            python tools/agent_manager/src/validator.py --yaml-schema schemas/agent.schema.yaml --file $file --tag-definitions tags.json --output-format github-actions --verbose
            
            # Capture exit code
            EXIT_CODE=$?
            
            if [ $EXIT_CODE -ne 0 ]; then
              ERROR_FOUND=1
              echo "::error file=$file::Validation failed for $file"
            fi
          done

          # Exit with error if any validation failed
          if [ $ERROR_FOUND -eq 1 ]; then
            exit 1
          fi

      - name: Validate all YAML files (on PR)
        if: github.event_name == 'pull_request'
        run: |
          echo "Validating all agent YAML files..."
          python tools/agent_manager/src/validator.py --yaml-schema schemas/agent.schema.yaml --directory agents --tag-definitions tags.json --output-format github-actions --verbose
